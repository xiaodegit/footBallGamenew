{"version":3,"sources":["file:///D:/cocosProject/footBallGame/game/node_modules/socket.io-client/build/esm/url.js"],"names":["url","uri","path","loc","obj","location","protocol","host","charAt","test","parse","port","ipv6","indexOf","id","href"],"mappings":";;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,WAASA,GAAT,CAAaC,GAAb,EAAkBC,IAAI,GAAG,EAAzB,EAA6BC,GAA7B,EAAkC;AACrC,QAAIC,GAAG,GAAGH,GAAV,CADqC,CAErC;;AACAE,IAAAA,GAAG,GAAGA,GAAG,IAAK,OAAOE,QAAP,KAAoB,WAApB,IAAmCA,QAAjD;AACA,QAAI,QAAQJ,GAAZ,EACIA,GAAG,GAAGE,GAAG,CAACG,QAAJ,GAAe,IAAf,GAAsBH,GAAG,CAACI,IAAhC,CALiC,CAMrC;;AACA,QAAI,OAAON,GAAP,KAAe,QAAnB,EAA6B;AACzB,UAAI,QAAQA,GAAG,CAACO,MAAJ,CAAW,CAAX,CAAZ,EAA2B;AACvB,YAAI,QAAQP,GAAG,CAACO,MAAJ,CAAW,CAAX,CAAZ,EAA2B;AACvBP,UAAAA,GAAG,GAAGE,GAAG,CAACG,QAAJ,GAAeL,GAArB;AACH,SAFD,MAGK;AACDA,UAAAA,GAAG,GAAGE,GAAG,CAACI,IAAJ,GAAWN,GAAjB;AACH;AACJ;;AACD,UAAI,CAAC,sBAAsBQ,IAAtB,CAA2BR,GAA3B,CAAL,EAAsC;AAClC,YAAI,gBAAgB,OAAOE,GAA3B,EAAgC;AAC5BF,UAAAA,GAAG,GAAGE,GAAG,CAACG,QAAJ,GAAe,IAAf,GAAsBL,GAA5B;AACH,SAFD,MAGK;AACDA,UAAAA,GAAG,GAAG,aAAaA,GAAnB;AACH;AACJ,OAhBwB,CAiBzB;;;AACAG,MAAAA,GAAG,GAAGM,KAAK,CAACT,GAAD,CAAX;AACH,KA1BoC,CA2BrC;;;AACA,QAAI,CAACG,GAAG,CAACO,IAAT,EAAe;AACX,UAAI,cAAcF,IAAd,CAAmBL,GAAG,CAACE,QAAvB,CAAJ,EAAsC;AAClCF,QAAAA,GAAG,CAACO,IAAJ,GAAW,IAAX;AACH,OAFD,MAGK,IAAI,eAAeF,IAAf,CAAoBL,GAAG,CAACE,QAAxB,CAAJ,EAAuC;AACxCF,QAAAA,GAAG,CAACO,IAAJ,GAAW,KAAX;AACH;AACJ;;AACDP,IAAAA,GAAG,CAACF,IAAJ,GAAWE,GAAG,CAACF,IAAJ,IAAY,GAAvB;AACA,UAAMU,IAAI,GAAGR,GAAG,CAACG,IAAJ,CAASM,OAAT,CAAiB,GAAjB,MAA0B,CAAC,CAAxC;AACA,UAAMN,IAAI,GAAGK,IAAI,GAAG,MAAMR,GAAG,CAACG,IAAV,GAAiB,GAApB,GAA0BH,GAAG,CAACG,IAA/C,CAtCqC,CAuCrC;;AACAH,IAAAA,GAAG,CAACU,EAAJ,GAASV,GAAG,CAACE,QAAJ,GAAe,KAAf,GAAuBC,IAAvB,GAA8B,GAA9B,GAAoCH,GAAG,CAACO,IAAxC,GAA+CT,IAAxD,CAxCqC,CAyCrC;;AACAE,IAAAA,GAAG,CAACW,IAAJ,GACIX,GAAG,CAACE,QAAJ,GACI,KADJ,GAEIC,IAFJ,IAGKJ,GAAG,IAAIA,GAAG,CAACQ,IAAJ,KAAaP,GAAG,CAACO,IAAxB,GAA+B,EAA/B,GAAoC,MAAMP,GAAG,CAACO,IAHnD,CADJ;AAKA,WAAOP,GAAP;AACH;;iBAhDeJ,G;;;;AAVPU,MAAAA,K,mBAAAA,K","sourcesContent":["import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"]}