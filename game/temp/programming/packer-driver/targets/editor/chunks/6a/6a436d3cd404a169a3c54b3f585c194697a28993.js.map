{"version":3,"sources":["file:///D:/cocosProject/footBallGame/node_modules/xmlhttprequest-ssl/lib/XMLHttpRequest.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","url","define","exports","require","module","__filename","__dirname","fs","Url","spawn","XMLHttpRequest","opts","self","http","https","request","response","settings","disableHeaderCheck","defaultHeaders","headers","Object","assign","forbiddenRequestHeaders","forbiddenRequestMethods","sendFlag","errorFlag","abortedFlag","listeners","UNSENT","OPENED","HEADERS_RECEIVED","LOADING","DONE","readyState","onreadystatechange","responseText","responseXML","Buffer","alloc","status","statusText","isAllowedHttpHeader","header","indexOf","toLowerCase","isAllowedHttpMethod","method","open","async","user","password","abort","Error","toString","setState","setDisableHeaderCheck","state","setRequestHeader","value","console","warn","getResponseHeader","getAllResponseHeaders","result","i","substr","length","getRequestHeader","name","send","data","ssl","local","parse","host","protocol","hostname","undefined","readFile","unescape","pathname","error","handleError","errno","readFileSync","e","port","uri","search","authBuf","isBuffer","byteLength","agent","options","path","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","doRequest","dispatchEvent","responseHandler","resp","statusCode","location","newOptions","on","errorHandler","end","chunk","from","concat","autoUnref","socket","unref","write","contentFile","process","pid","syncFile","writeFileSync","execString","JSON","stringify","slice","replace","syncProc","argv","existsSync","stdin","unlinkSync","match","errorObj","text","stack","addEventListener","event","callback","push","removeEventListener","filter","ev","setTimeout","len","call","fire","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'fs';\nimport { __cjsMetaURL as _req0} from 'url';\nimport { __cjsMetaURL as _req1} from 'child_process';\nimport { __cjsMetaURL as _req2} from 'http';\nimport { __cjsMetaURL as _req3} from 'https';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n /**\n  * Wrapper for built-in http.js to emulate the browser XMLHttpRequest object.\n  *\n  * This can be used with JS designed for browsers to improve reuse of code and\n  * allow the use of existing libraries.\n  *\n  * Usage: include(\"XMLHttpRequest.js\") and use XMLHttpRequest per W3C specs.\n  *\n  * @author Dan DeFelippi <dan@driverdan.com>\n  * @contributor David Ellis <d.f.ellis@ieee.org>\n  * @license MIT\n  */\n\n var fs = require('fs');\n var Url = require('url');\n var spawn = require('child_process').spawn;\n\n /**\n  * Module exports.\n  */\n\n module.exports = XMLHttpRequest;\n\n // backwards-compat\n XMLHttpRequest.XMLHttpRequest = XMLHttpRequest;\n\n /**\n  * `XMLHttpRequest` constructor.\n  *\n  * Supported options for the `opts` object are:\n  *\n  *  - `agent`: An http.Agent instance; http.globalAgent may be used; if 'undefined', agent usage is disabled\n  *\n  * @param {Object} opts optional \"options\" object\n  */\n\n function XMLHttpRequest(opts) {\n   \"use strict\";\n\n   opts = opts || {};\n\n   /**\n    * Private variables\n    */\n   var self = this;\n   var http = require('http');\n   var https = require('https');\n\n   // Holds http.js objects\n   var request;\n   var response;\n\n   // Request settings\n   var settings = {};\n\n   // Disable header blacklist.\n   // Not part of XHR specs.\n   var disableHeaderCheck = false;\n\n   // Set some default headers\n   var defaultHeaders = {\n     \"User-Agent\": \"node-XMLHttpRequest\",\n     \"Accept\": \"*/*\"\n   };\n\n   var headers = Object.assign({}, defaultHeaders);\n\n   // These headers are not user setable.\n   // The following are allowed but banned in the spec:\n   // * user-agent\n   var forbiddenRequestHeaders = [\n     \"accept-charset\",\n     \"accept-encoding\",\n     \"access-control-request-headers\",\n     \"access-control-request-method\",\n     \"connection\",\n     \"content-length\",\n     \"content-transfer-encoding\",\n     \"cookie\",\n     \"cookie2\",\n     \"date\",\n     \"expect\",\n     \"host\",\n     \"keep-alive\",\n     \"origin\",\n     \"referer\",\n     \"te\",\n     \"trailer\",\n     \"transfer-encoding\",\n     \"upgrade\",\n     \"via\"\n   ];\n\n   // These request methods are not allowed\n   var forbiddenRequestMethods = [\n     \"TRACE\",\n     \"TRACK\",\n     \"CONNECT\"\n   ];\n\n   // Send flag\n   var sendFlag = false;\n   // Error flag, used when errors occur or abort is called\n   var errorFlag = false;\n   var abortedFlag = false;\n\n   // Event listeners\n   var listeners = {};\n\n   /**\n    * Constants\n    */\n\n   this.UNSENT = 0;\n   this.OPENED = 1;\n   this.HEADERS_RECEIVED = 2;\n   this.LOADING = 3;\n   this.DONE = 4;\n\n   /**\n    * Public vars\n    */\n\n   // Current state\n   this.readyState = this.UNSENT;\n\n   // default ready state change handler in case one is not set or is set late\n   this.onreadystatechange = null;\n\n   // Result & response\n   this.responseText = \"\";\n   this.responseXML = \"\";\n   this.response = Buffer.alloc(0);\n   this.status = null;\n   this.statusText = null;\n\n   /**\n    * Private methods\n    */\n\n   /**\n    * Check if the specified header is allowed.\n    *\n    * @param string header Header to validate\n    * @return boolean False if not allowed, otherwise true\n    */\n   var isAllowedHttpHeader = function(header) {\n     return disableHeaderCheck || (header && forbiddenRequestHeaders.indexOf(header.toLowerCase()) === -1);\n   };\n\n   /**\n    * Check if the specified method is allowed.\n    *\n    * @param string method Request method to validate\n    * @return boolean False if not allowed, otherwise true\n    */\n   var isAllowedHttpMethod = function(method) {\n     return (method && forbiddenRequestMethods.indexOf(method) === -1);\n   };\n\n   /**\n    * Public methods\n    */\n\n   /**\n    * Open the connection. Currently supports local server requests.\n    *\n    * @param string method Connection method (eg GET, POST)\n    * @param string url URL for the connection.\n    * @param boolean async Asynchronous connection. Default is true.\n    * @param string user Username for basic authentication (optional)\n    * @param string password Password for basic authentication (optional)\n    */\n   this.open = function(method, url, async, user, password) {\n     this.abort();\n     errorFlag = false;\n     abortedFlag = false;\n\n     // Check for valid request method\n     if (!isAllowedHttpMethod(method)) {\n       throw new Error(\"SecurityError: Request method not allowed\");\n     }\n\n     settings = {\n       \"method\": method,\n       \"url\": url.toString(),\n       \"async\": (typeof async !== \"boolean\" ? true : async),\n       \"user\": user || null,\n       \"password\": password || null\n     };\n\n     setState(this.OPENED);\n   };\n\n   /**\n    * Disables or enables isAllowedHttpHeader() check the request. Enabled by default.\n    * This does not conform to the W3C spec.\n    *\n    * @param boolean state Enable or disable header checking.\n    */\n   this.setDisableHeaderCheck = function(state) {\n     disableHeaderCheck = state;\n   };\n\n   /**\n    * Sets a header for the request.\n    *\n    * @param string header Header name\n    * @param string value Header value\n    * @return boolean Header added\n    */\n   this.setRequestHeader = function(header, value) {\n     if (this.readyState != this.OPENED) {\n       throw new Error(\"INVALID_STATE_ERR: setRequestHeader can only be called when state is OPEN\");\n     }\n     if (!isAllowedHttpHeader(header)) {\n       console.warn('Refused to set unsafe header \"' + header + '\"');\n       return false;\n     }\n     if (sendFlag) {\n       throw new Error(\"INVALID_STATE_ERR: send flag is true\");\n     }\n     headers[header] = value;\n     return true;\n   };\n\n   /**\n    * Gets a header from the server response.\n    *\n    * @param string header Name of header to get.\n    * @return string Text of the header or null if it doesn't exist.\n    */\n   this.getResponseHeader = function(header) {\n     if (typeof header === \"string\"\n       && this.readyState > this.OPENED\n       && response.headers[header.toLowerCase()]\n       && !errorFlag\n     ) {\n       return response.headers[header.toLowerCase()];\n     }\n\n     return null;\n   };\n\n   /**\n    * Gets all the response headers.\n    *\n    * @return string A string with all response headers separated by CR+LF\n    */\n   this.getAllResponseHeaders = function() {\n     if (this.readyState < this.HEADERS_RECEIVED || errorFlag) {\n       return \"\";\n     }\n     var result = \"\";\n\n     for (var i in response.headers) {\n       // Cookie headers are excluded\n       if (i !== \"set-cookie\" && i !== \"set-cookie2\") {\n         result += i + \": \" + response.headers[i] + \"\\r\\n\";\n       }\n     }\n     return result.substr(0, result.length - 2);\n   };\n\n   /**\n    * Gets a request header\n    *\n    * @param string name Name of header to get\n    * @return string Returns the request header or empty string if not set\n    */\n   this.getRequestHeader = function(name) {\n     // @TODO Make this case insensitive\n     if (typeof name === \"string\" && headers[name]) {\n       return headers[name];\n     }\n\n     return \"\";\n   };\n\n   /**\n    * Sends the request to the server.\n    *\n    * @param string data Optional data to send as request body.\n    */\n   this.send = function(data) {\n     if (this.readyState != this.OPENED) {\n       throw new Error(\"INVALID_STATE_ERR: connection must be opened before send() is called\");\n     }\n\n     if (sendFlag) {\n       throw new Error(\"INVALID_STATE_ERR: send has already been called\");\n     }\n\n     var ssl = false, local = false;\n     var url = Url.parse(settings.url);\n     var host;\n     // Determine the server\n     switch (url.protocol) {\n       case 'https:':\n         ssl = true;\n         // SSL & non-SSL both need host, no break here.\n       case 'http:':\n         host = url.hostname;\n         break;\n\n       case 'file:':\n         local = true;\n         break;\n\n       case undefined:\n       case '':\n         host = \"localhost\";\n         break;\n\n       default:\n         throw new Error(\"Protocol not supported.\");\n     }\n\n     // Load files off the local filesystem (file://)\n     if (local) {\n       if (settings.method !== \"GET\") {\n         throw new Error(\"XMLHttpRequest: Only GET method is supported\");\n       }\n\n       if (settings.async) {\n         fs.readFile(unescape(url.pathname), function(error, data) {\n           if (error) {\n             self.handleError(error, error.errno || -1);\n           } else {\n             self.status = 200;\n             self.responseText = data.toString('utf8');\n             self.response = data;\n             setState(self.DONE);\n           }\n         });\n       } else {\n         try {\n           this.response = fs.readFileSync(unescape(url.pathname));\n           this.responseText = this.response.toString('utf8');\n           this.status = 200;\n           setState(self.DONE);\n         } catch(e) {\n           this.handleError(e, e.errno || -1);\n         }\n       }\n\n       return;\n     }\n\n     // Default to port 80. If accessing localhost on another port be sure\n     // to use http://localhost:port/path\n     var port = url.port || (ssl ? 443 : 80);\n     // Add query string if one is used\n     var uri = url.pathname + (url.search ? url.search : '');\n\n     // Set the Host header or the server may reject the request\n     headers[\"Host\"] = host;\n     if (!((ssl && port === 443) || port === 80)) {\n       headers[\"Host\"] += ':' + url.port;\n     }\n\n     // Set Basic Auth if necessary\n     if (settings.user) {\n       if (typeof settings.password == \"undefined\") {\n         settings.password = \"\";\n       }\n       var authBuf = new Buffer(settings.user + \":\" + settings.password);\n       headers[\"Authorization\"] = \"Basic \" + authBuf.toString(\"base64\");\n     }\n\n     // Set content length header\n     if (settings.method === \"GET\" || settings.method === \"HEAD\") {\n       data = null;\n     } else if (data) {\n       headers[\"Content-Length\"] = Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data);\n\n       if (!headers[\"Content-Type\"]) {\n         headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\n       }\n     } else if (settings.method === \"POST\") {\n       // For a post with no data set Content-Length: 0.\n       // This is required by buggy servers that don't meet the specs.\n       headers[\"Content-Length\"] = 0;\n     }\n\n     var agent = opts.agent || false;\n     var options = {\n       host: host,\n       port: port,\n       path: uri,\n       method: settings.method,\n       headers: headers,\n       agent: agent\n     };\n\n     if (ssl) {\n       options.pfx = opts.pfx;\n       options.key = opts.key;\n       options.passphrase = opts.passphrase;\n       options.cert = opts.cert;\n       options.ca = opts.ca;\n       options.ciphers = opts.ciphers;\n       options.rejectUnauthorized = opts.rejectUnauthorized === false ? false : true;\n     }\n\n     // Reset error flag\n     errorFlag = false;\n     // Handle async requests\n     if (settings.async) {\n       // Use the proper protocol\n       var doRequest = ssl ? https.request : http.request;\n\n       // Request is being sent, set send flag\n       sendFlag = true;\n\n       // As per spec, this is called here for historical reasons.\n       self.dispatchEvent(\"readystatechange\");\n\n       // Handler for the response\n       var responseHandler = function(resp) {\n         // Set response var to the response we got back\n         // This is so it remains accessable outside this scope\n         response = resp;\n         // Check for redirect\n         // @TODO Prevent looped redirects\n         if (response.statusCode === 302 || response.statusCode === 303 || response.statusCode === 307) {\n           // Change URL to the redirect location\n           settings.url = response.headers.location;\n           var url = Url.parse(settings.url);\n           // Set host var in case it's used later\n           host = url.hostname;\n           // Options for the new request\n           var newOptions = {\n             hostname: url.hostname,\n             port: url.port,\n             path: url.path,\n             method: response.statusCode === 303 ? 'GET' : settings.method,\n             headers: headers\n           };\n\n           if (ssl) {\n             newOptions.pfx = opts.pfx;\n             newOptions.key = opts.key;\n             newOptions.passphrase = opts.passphrase;\n             newOptions.cert = opts.cert;\n             newOptions.ca = opts.ca;\n             newOptions.ciphers = opts.ciphers;\n             newOptions.rejectUnauthorized = opts.rejectUnauthorized === false ? false : true;\n           }\n\n           // Issue the new request\n           request = doRequest(newOptions, responseHandler).on('error', errorHandler);\n           request.end();\n           // @TODO Check if an XHR event needs to be fired here\n           return;\n         }\n\n         setState(self.HEADERS_RECEIVED);\n         self.status = response.statusCode;\n\n         response.on('data', function(chunk) {\n           // Make sure there's some data\n           if (chunk) {\n             var data = Buffer.from(chunk);\n             self.response = Buffer.concat([self.response, data]);\n           }\n           // Don't emit state changes if the connection has been aborted.\n           if (sendFlag) {\n             setState(self.LOADING);\n           }\n         });\n\n         response.on('end', function() {\n           if (sendFlag) {\n             // The sendFlag needs to be set before setState is called.  Otherwise if we are chaining callbacks\n             // there can be a timing issue (the callback is called and a new call is made before the flag is reset).\n             sendFlag = false;\n             // Discard the 'end' event if the connection has been aborted\n             setState(self.DONE);\n             // Construct responseText from response\n             self.responseText = self.response.toString('utf8');\n           }\n         });\n\n         response.on('error', function(error) {\n           self.handleError(error);\n         });\n       }\n\n       // Error handler for the request\n       var errorHandler = function(error) {\n         self.handleError(error);\n       }\n\n       // Create the request\n       request = doRequest(options, responseHandler).on('error', errorHandler);\n\n       if (opts.autoUnref) {\n         request.on('socket', (socket) => {\n           socket.unref();\n         });\n       }\n\n       // Node 0.4 and later won't accept empty data. Make sure it's needed.\n       if (data) {\n         request.write(data);\n       }\n\n       request.end();\n\n       self.dispatchEvent(\"loadstart\");\n     } else { // Synchronous\n       // Create a temporary file for communication with the other Node process\n       var contentFile = \".node-xmlhttprequest-content-\" + process.pid;\n       var syncFile = \".node-xmlhttprequest-sync-\" + process.pid;\n       fs.writeFileSync(syncFile, \"\", \"utf8\");\n       // The async request the other Node process executes\n       var execString = \"var http = require('http'), https = require('https'), fs = require('fs');\"\n         + \"var doRequest = http\" + (ssl ? \"s\" : \"\") + \".request;\"\n         + \"var options = \" + JSON.stringify(options) + \";\"\n         + \"var responseText = '';\"\n         + \"var responseData = Buffer.alloc(0);\"\n         + \"var req = doRequest(options, function(response) {\"\n         + \"response.on('data', function(chunk) {\"\n         + \"  var data = Buffer.from(chunk);\"\n         + \"  responseText += data.toString('utf8');\"\n         + \"  responseData = Buffer.concat([responseData, data]);\"\n         + \"});\"\n         + \"response.on('end', function() {\"\n         + \"fs.writeFileSync('\" + contentFile + \"', JSON.stringify({err: null, data: {statusCode: response.statusCode, headers: response.headers, text: responseText, data: responseData.toString('base64')}}), 'utf8');\"\n         + \"fs.unlinkSync('\" + syncFile + \"');\"\n         + \"});\"\n         + \"response.on('error', function(error) {\"\n         + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');\"\n         + \"fs.unlinkSync('\" + syncFile + \"');\"\n         + \"});\"\n         + \"}).on('error', function(error) {\"\n         + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');\"\n         + \"fs.unlinkSync('\" + syncFile + \"');\"\n         + \"});\"\n         + (data ? \"req.write('\" + JSON.stringify(data).slice(1,-1).replace(/'/g, \"\\\\'\") + \"');\":\"\")\n         + \"req.end();\";\n       // Start the other Node Process, executing this string\n       var syncProc = spawn(process.argv[0], [\"-e\", execString]);\n       var statusText;\n       while(fs.existsSync(syncFile)) {\n         // Wait while the sync file is empty\n       }\n       self.responseText = fs.readFileSync(contentFile, 'utf8');\n       // Kill the child process once the file has data\n       syncProc.stdin.end();\n       // Remove the temporary file\n       fs.unlinkSync(contentFile);\n       if (self.responseText.match(/^NODE-XMLHTTPREQUEST-ERROR:/)) {\n         // If the file returned an error, handle it\n         var errorObj = JSON.parse(self.responseText.replace(/^NODE-XMLHTTPREQUEST-ERROR:/, \"\"));\n         self.handleError(errorObj, 503);\n       } else {\n         // If the file returned okay, parse its data and move to the DONE state\n         self.status = self.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:([0-9]*),.*/, \"$1\");\n         var resp = JSON.parse(self.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:[0-9]*,(.*)/, \"$1\"));\n         response = {\n           statusCode: self.status,\n           headers: resp.data.headers\n         };\n         self.responseText = resp.data.text;\n         self.response = Buffer.from(resp.data.data, 'base64');\n         setState(self.DONE, true);\n       }\n     }\n   };\n\n   /**\n    * Called when an error is encountered to deal with it.\n    * @param  status  {number}    HTTP status code to use rather than the default (0) for XHR errors.\n    */\n   this.handleError = function(error, status) {\n     this.status = status || 0;\n     this.statusText = error;\n     this.responseText = error.stack;\n     errorFlag = true;\n     setState(this.DONE);\n   };\n\n   /**\n    * Aborts a request.\n    */\n   this.abort = function() {\n     if (request) {\n       request.abort();\n       request = null;\n     }\n\n     headers = Object.assign({}, defaultHeaders);\n     this.responseText = \"\";\n     this.responseXML = \"\";\n     this.response = Buffer.alloc(0);\n\n     errorFlag = abortedFlag = true\n     if (this.readyState !== this.UNSENT\n         && (this.readyState !== this.OPENED || sendFlag)\n         && this.readyState !== this.DONE) {\n       sendFlag = false;\n       setState(this.DONE);\n     }\n     this.readyState = this.UNSENT;\n   };\n\n   /**\n    * Adds an event listener. Preferred method of binding to events.\n    */\n   this.addEventListener = function(event, callback) {\n     if (!(event in listeners)) {\n       listeners[event] = [];\n     }\n     // Currently allows duplicate callbacks. Should it?\n     listeners[event].push(callback);\n   };\n\n   /**\n    * Remove an event callback that has already been bound.\n    * Only works on the matching funciton, cannot be a copy.\n    */\n   this.removeEventListener = function(event, callback) {\n     if (event in listeners) {\n       // Filter will return a new array with the callback removed\n       listeners[event] = listeners[event].filter(function(ev) {\n         return ev !== callback;\n       });\n     }\n   };\n\n   /**\n    * Dispatch any events, including both \"on\" methods and events attached using addEventListener.\n    */\n   this.dispatchEvent = function (event) {\n     if (typeof self[\"on\" + event] === \"function\") {\n       if (this.readyState === this.DONE && settings.async)\n         setTimeout(function() { self[\"on\" + event]() }, 0)\n       else\n         self[\"on\" + event]()\n     }\n     if (event in listeners) {\n       for (let i = 0, len = listeners[event].length; i < len; i++) {\n         if (this.readyState === this.DONE)\n           setTimeout(function() { listeners[event][i].call(self) }, 0)\n         else\n           listeners[event][i].call(self)\n       }\n     }\n   };\n\n   /**\n    * Changes readyState and calls onreadystatechange.\n    *\n    * @param int state New state\n    */\n   var setState = function(state) {\n     if ((self.readyState === state) || (self.readyState === self.UNSENT && abortedFlag))\n       return\n\n     self.readyState = state;\n\n     if (settings.async || self.readyState < self.OPENED || self.readyState === self.DONE) {\n       self.dispatchEvent(\"readystatechange\");\n     }\n\n     if (self.readyState === self.DONE) {\n       let fire\n\n       if (abortedFlag)\n         fire = \"abort\"\n       else if (errorFlag)\n         fire = \"error\"\n       else\n         fire = \"load\"\n\n       self.dispatchEvent(fire)\n\n       // @TODO figure out InspectorInstrumentation::didLoadXHR(cookie)\n       self.dispatchEvent(\"loadend\");\n     }\n   };\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  'fs': _req,\n  'url': _req0,\n  'child_process': _req1,\n  'http': _req2,\n  'https': _req3,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}