{"version":3,"sources":["file:///D:/cocosProject/footBallGame/node_modules/socket.io-client/build/esm/index.js"],"names":["lookup","uri","opts","undefined","parsed","url","path","source","id","sameNamespace","cache","newConnection","forceNew","multiplex","io","Manager","query","queryKey","socket","Socket","protocol","Object","assign","connect"],"mappings":";;;;;AAOA,WAASA,MAAT,CAAgBC,GAAhB,EAAqBC,IAArB,EAA2B;AACvB,QAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B;AACzBC,MAAAA,IAAI,GAAGD,GAAP;AACAA,MAAAA,GAAG,GAAGE,SAAN;AACH;;AACDD,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACA,QAAME,MAAM,GAAGC,GAAG,CAACJ,GAAD,EAAMC,IAAI,CAACI,IAAL,IAAa,YAAnB,CAAlB;AACA,QAAMC,MAAM,GAAGH,MAAM,CAACG,MAAtB;AACA,QAAMC,EAAE,GAAGJ,MAAM,CAACI,EAAlB;AACA,QAAMF,IAAI,GAAGF,MAAM,CAACE,IAApB;AACA,QAAMG,aAAa,GAAGC,KAAK,CAACF,EAAD,CAAL,IAAaF,IAAI,IAAII,KAAK,CAACF,EAAD,CAAL,CAAU,MAAV,CAA3C;AACA,QAAMG,aAAa,GAAGT,IAAI,CAACU,QAAL,IAClBV,IAAI,CAAC,sBAAD,CADc,IAElB,UAAUA,IAAI,CAACW,SAFG,IAGlBJ,aAHJ;AAIA,QAAIK,EAAJ;;AACA,QAAIH,aAAJ,EAAmB;AACfG,MAAAA,EAAE,GAAG,IAAIC,OAAJ,CAAYR,MAAZ,EAAoBL,IAApB,CAAL;AACH,KAFD,MAGK;AACD,UAAI,CAACQ,KAAK,CAACF,EAAD,CAAV,EAAgB;AACZE,QAAAA,KAAK,CAACF,EAAD,CAAL,GAAY,IAAIO,OAAJ,CAAYR,MAAZ,EAAoBL,IAApB,CAAZ;AACH;;AACDY,MAAAA,EAAE,GAAGJ,KAAK,CAACF,EAAD,CAAV;AACH;;AACD,QAAIJ,MAAM,CAACY,KAAP,IAAgB,CAACd,IAAI,CAACc,KAA1B,EAAiC;AAC7Bd,MAAAA,IAAI,CAACc,KAAL,GAAaZ,MAAM,CAACa,QAApB;AACH;;AACD,WAAOH,EAAE,CAACI,MAAH,CAAUd,MAAM,CAACE,IAAjB,EAAuBJ,IAAvB,CAAP;AACH,G,CACD;AACA;;;;QAkB0BF,M;aAAcA,M;aAAmBA;;;;;AAxDlDK,MAAAA,G,gBAAAA,G;;AACAU,MAAAA,O,iBAAAA,O;;AACAI,MAAAA,M,iBAAAA,M;;0CAgDAC,Q;;;AA/CT;AACA;AACA;AACMV,MAAAA,K,GAAQ,E;AAiCdW,MAAAA,MAAM,CAACC,MAAP,CAActB,MAAd,EAAsB;AAClBe,QAAAA,OADkB;AAElBI,QAAAA,MAFkB;AAGlBL,QAAAA,EAAE,EAAEd,MAHc;AAIlBuB,QAAAA,OAAO,EAAEvB;AAJS,OAAtB;AAMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;yBACSe,O;;wBAASI,M","sourcesContent":["import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n"]}